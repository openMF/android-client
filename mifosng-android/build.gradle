/*
 * This project is licensed under the open source MPL V2.
 * See https://github.com/openMF/android-client/blob/master/LICENSE.md
 */

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.4'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
    maven { url "https://jitpack.io" }
    maven { url 'http://dl.bintray.com/amulyakhare/maven' }

}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 22
        // A test runner provided by https://code.google.com/p/android-test-kit/
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
        androidTest {
            java.srcDirs = ['src/instrumentTest/java/']
        }
    }

    signingConfigs {
        release {
            storeFile file("../default_key_store.jks")
            storePassword "mifos1234"
            keyAlias "mifos"
            keyPassword "mifos1234"
        }
    }

    productFlavors {
    }

    buildTypes {

        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    // Exclude duplicated Hamcrest LICENSE.txt from being packaged into the apk.
    // This is a workaround for https://code.google.com/p/android/issues/detail?id=65445.
    // The Hamcrest is used in tests.
    packagingOptions {
        exclude 'LICENSE.txt'
    }
    useLibrary 'org.apache.http.legacy'

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

task buildAndEMailAPK(type: Exec, description: 'Builds and Generates a Signed APK and emails it') {


}

task copyNativeLibs(type: Copy) {
    from(new File(getProjectDir(), 'src/main/libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}

tasks.withType(JavaCompile) {
    compileTask ->
        compileTask.dependsOn(copyNativeLibs)
}

clean.dependsOn('cleanCopyNativeLibs')

tasks.withType(com.android.build.gradle.tasks.PackageApplication) {
    pkgTask ->
        pkgTask.jniFolders = new HashSet<File>()
        pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}

dependencies {


    apt 'com.github.Raizlabs.DBFlow:dbflow-processor:3.0.0-beta1'
    compile "com.github.Raizlabs.DBFlow:dbflow-core:3.0.0-beta1"
    compile "com.github.Raizlabs.DBFlow:dbflow:3.0.0-beta1"
    compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.google.android.gms:play-services-location:8.3.0'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.google.maps.android:android-maps-utils:0.4.2'

    compile 'com.android.support:design:23.1.1'
    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.jakewharton.fliptables:fliptables:1.0.1'
    compile 'javax.annotation:jsr250-api:1.0@jar'
    compile 'com.joanzapata.iconify:android-iconify-material:2.1.1' // (v2.0.0)

    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile "com.android.support.test.espresso:espresso-idling-resource:2.2.1"

    // Android Testing Support Library's runner and rules
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "com.android.support.test:rules:0.5"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:2.2.1"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:2.2.1"

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'

}
    /*
    Resolves dependency versions across test and production APKs, specifically, transitive
    dependencies. This is required since Espresso internally has a dependency on support-annotations.
    */
    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:23.1.1"
    }

    /*
    All direct/transitive dependencies shared between your test and production APKs need to be
    excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
    excluding these dependencies from your test configuration will result in an dex pre-verifier error
    at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
    */
    configurations.compile.dependencies.each { compileDependency ->
        println "Excluding compile dependency: ${compileDependency.getName()}"
        configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
            configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
        }
    }
